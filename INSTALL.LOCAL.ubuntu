#!/bin/bash

# Run: curl -sSL https://raw.githubusercontent.com/danbooru/danbooru/master/INSTALL.LOCAL.ubuntu -o install.sh ; chmod +x install.sh ; ./install.sh

export RUBY_VERSION=2.6.5
export VIPS_VERSION=8.7.0

if [[ "$(whoami)" != "root" ]] ; then
  echo "You must run this script as root"
  exit 1
fi

echo "* DANBOORU INSTALLATION SCRIPT"
echo "*"
echo "* This script will install all the necessary packages to run Danbooru on an   "
echo "* Ubuntu server as a local instance."
echo

# Install packages
echo "* Installing packages..."

apt-get update
apt-get -y install apt-transport-https
apt-get -y install build-essential redis sendmail-bin sendmail ffmpeg mkvtoolnix
apt-get -y install libssl-dev libxml2-dev libxslt-dev libreadline-dev  libcurl4-openssl-dev
apt-get -y install liblcms2-dev libjpeg-turbo8-dev libexpat1-dev libgif-dev libpng-dev libexif-dev
apt-get -y install postgresql libpq-dev

# Setup for yarn install
curl -sSL https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
# Setup for nodejs install
curl -sSL https://deb.nodesource.com/setup_10.x | sudo -E bash -

apt-get update
apt-get -y install nodejs yarn

# compile and install libvips (the version in apt is too old)
cd /tmp
wget -q https://github.com/libvips/libvips/releases/download/v$VIPS_VERSION/vips-$VIPS_VERSION.tar.gz
tar xzf vips-$VIPS_VERSION.tar.gz
cd vips-$VIPS_VERSION
./configure --prefix=/usr
make install
ldconfig

# Create user account
useradd -m danbooru
chsh -s /bin/bash danbooru
usermod -G danbooru,sudo danbooru

# Necessary to build parser extension
apt install postgresql-server-dev-all -y
git clone https://github.com/r888888888/test_parser.git /tmp/test_parser
cd /tmp/test_parser
make install

# Clone the repository
echo "* Cloning Danbooru repository..."
sudo -u danbooru git clone https://github.com/danbooru/danbooru.git ~danbooru/danbooru
cd ~danbooru/danbooru
sudo -u danbooru git remote rename origin upstream

RBENV_SETUP='export PATH="$HOME/.rbenv/bin:$PATH";rbenv init -'
# Install rbenv
echo "* Installing rbenv..."
cd ~danbooru
sudo -u danbooru git clone git://github.com/sstephenson/rbenv.git ~danbooru/.rbenv
sudo -u danbooru touch ~danbooru/.bash_profile
echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~danbooru/.bash_profile
echo 'eval "$(rbenv init -)"' >> ~danbooru/.bash_profile
sudo -u danbooru mkdir -p ~danbooru/.rbenv/plugins
sudo -u danbooru git clone git://github.com/sstephenson/ruby-build.git ~danbooru/.rbenv/plugins/ruby-build
sudo -i -u danbooru bash -l -c "RUBY_CONFIGURE_OPTS=--disable-install-doc rbenv install --verbose $RUBY_VERSION"
sudo -i -u danbooru bash -l -c "rbenv global $RUBY_VERSION"

# Generate secret token and secret key
echo "* Generating secret keys..."
sudo -u danbooru mkdir ~danbooru/.danbooru/
sudo -u danbooru sh -c 'openssl rand -hex 32 > ~danbooru/.danbooru/secret_token'
sudo -u danbooru sh -c 'openssl rand -hex 32 > ~danbooru/.danbooru/session_secret_key'
chmod 600 ~danbooru/.danbooru/*

# Install gems
echo "* Installing gems..."
sudo -i -u danbooru bash -l -c 'gem install --no-document bundler'

echo "* Install configuration scripts..."

# Update PostgreSQL
for VERSION in $(ls /etc/postgresql) ; do
  if [ -d "/etc/postgresql/$VERSION" ] && [ -d "/etc/postgresql/$VERSION/main" ] ; then
    cp ~danbooru/danbooru/script/install/postgresql_hba_conf /etc/postgresql/$VERSION/main/pg_hba.conf
  fi
done

/etc/init.d/postgresql restart
sudo -u postgres createuser -s danbooru
sudo -u danbooru createdb danbooru2

echo "* Setting up SSH keys for the danbooru account"
sudo -u danbooru ssh-keygen -t rsa -f ~danbooru/.ssh/id_rsa -N ""
sudo -u danbooru touch ~danbooru/.ssh/authorized_keys
sudo -u danbooru cat ~danbooru/.ssh/id_rsa.pub >> ~danbooru/.ssh/authorized_keys
sudo -u danbooru chmod 600 ~danbooru/.ssh/authorized_keys

sudo -u danbooru cp ~danbooru/danbooru/script/install/database.yml.templ ~danbooru/danbooru/config/database.yml
sudo -u danbooru cp ~danbooru/danbooru/script/install/danbooru_local_config.rb.templ ~danbooru/danbooru/config/danbooru_local_config.rb

echo "* Executing Danbooru repository setup"
cd ~danbooru/danbooru
sudo -i -u danbooru bash -l -c 'cd ~/danbooru;yarn install --check-files'
sudo -i -u danbooru bash -l -c 'cd ~/danbooru;bundle install'
sudo -i -u danbooru bash -l -c 'cd ~/danbooru;bundle exec rake db:create db:migrate'

# Setup danbooru account
clear
echo "* Enter a new password for the danbooru account"
passwd danbooru

clear
echo "* Almost done! You are now ready to run the server locally"
echo "* by running the following commands in the danbooru directory"
echo "* after logging into the danbooru account:"
echo "*"
echo "*   bundle exec rails server --binding 0.0.0.0"
echo "*"
echo "* This will start a web process running on port 3000 that you can"
echo "* connect to using the IP address of the server."
echo "*"
echo "* Example: http://192.168.56.100:3000"
echo "*"
echo "* This is useful for development and testing purposes."
read -p "Press [enter] to continue..."

clear
echo "* In order to do development for the Danbooru repository,"
echo "* log into Github and fork https://github.com/danbooru/danbooru into"
echo "* your own repository. Then add an origin remote source with the"
echo "* following command in the danbooru directory:"
echo "*"
echo "*   git remote add origin https://github.com/YOUR_GITHUB_USERNAME/danbooru.git"
echo "*"
echo "* Get the latest updates from the original Danbooru repsitory"
echo "* with the following commands while in the master branch:"
echo "*"
echo "*   git fetch upstream"
echo "*   git merge upstream/master"
echo "*"
echo "* If something breaks post about it on the Danbooru Github. Good luck!"
echo "* https://github.com/danbooru/danbooru/wiki/Ubuntu-Installation-Help-Guide"
